
using UnityEngine;
using System.Collections;
using Leap;
using Leap.Unity;
using LeapInternal;
using System;

public class CreateBall : MonoBehaviour
{
    LeapProvider provider;
    private IEnumerator coroutine;
    private bool isStart = false;//用于控制生成器是否进行的flag
    public GameObject CreateBallModel, CreateCube;//设置物体形式参数
    public System.Random rnd = new System.Random();
    private double[] Beats = { 0.20897959, 0.60371882, 1.021678, 1.43963719, 1.83437642, 2.22911565, 2.62385488, 3.04181406, 3.45977324, 3.83129252, 4.22603175, 4.64399093, 5.03873016, 5.45668934, 5.85142857, 6.26938776, 6.66412698, 7.08208617, 7.50004535, 7.89478458, 8.28952381, 8.70748299, 9.10222222, 9.49696145, 9.91492063, 10.30965986, 10.72761905, 11.14557823, 11.54031746, 11.93505669, 12.35301587, 12.7477551, 13.16571429, 13.56045351, 13.9784127, 14.39637188, 14.79111111, 15.18585034, 15.60380952, 15.99854875, 16.41650794, 16.81124717, 17.20598639, 17.62394558, 18.01868481, 18.43664399, 18.83138322, 19.2493424, 19.64408163, 20.06204082, 20.45678005, 20.87473923, 21.26947846, 21.66421769, 22.08217687, 22.50013605, 22.89487528, 23.28961451, 23.68435374, 24.10231293, 24.49705215, 24.91501134, 25.33297052, 25.72770975, 26.14566893, 26.54040816, 26.95836735, 27.35310658, 27.77106576, 28.16580499, 28.56054422, 28.9785034, 29.37324263, 29.79120181, 30.18594104, 30.60390023, 30.99863946, 31.41659864, 31.81133787, 32.22929705, 32.62403628, 33.01877551, 33.43673469, 33.83147392, 34.24943311, 34.64417234, 35.06213152, 35.45687075, 35.87482993, 36.26956916, 36.68752834, 37.08226757, 37.4770068, 37.89496599, 38.28970522, 38.7076644, 39.10240363, 39.52036281, 39.91510204, 40.33306122, 40.72780045, 41.14575964, 41.54049887, 41.9352381, 42.35319728, 42.77115646, 43.16589569, 43.58385488, 43.9785941, 44.39655329, 44.79129252, 45.18603175, 45.60399093, 45.99873016, 46.41668934, 46.81142857, 47.22938776, 47.62412698, 48.01886621, 48.4368254, 48.83156463, 49.24952381, 49.64426304, 50.06222222, 50.45696145, 50.87492063, 51.26965986, 51.66439909, 52.08235828, 52.47709751, 52.89505669, 53.28979592, 53.7077551, 54.10249433, 54.52045351, 54.91519274, 55.33315193, 55.72789116, 56.12263039, 56.54058957, 56.9353288, 57.35328798, 57.77124717, 58.16598639, 58.56072562, 58.97868481, 59.39664399, 59.79138322, 60.2093424, 60.60408163, 60.99882086, 61.41678005, 61.81151927, 62.2062585, 62.60099773, 63.01895692, 63.4369161, 63.85487528, 64.24961451, 64.64435374, 65.06231293, 65.48027211, 65.87501134, 66.26975057, 66.68770975, 67.08244898, 67.50040816, 67.89514739, 68.28988662, 68.68462585, 69.10258503, 69.52054422, 69.91528345, 70.33324263, 70.72798186, 71.14594104, 71.54068027, 71.9354195, 72.35337868, 72.77133787, 73.18929705, 73.58403628, 73.97877551, 74.39673469, 74.81469388, 75.20943311, 75.60417234, 75.99891156, 76.41687075, 76.81160998, 77.20634921, 77.62430839, 78.01904762, 78.41378685, 78.80852608, 79.22648526, 79.64444444, 80.06240363, 80.48036281, 80.87510204, 81.26984127, 81.68780045, 82.08253968, 82.50049887, 82.91845805, 83.31319728, 83.70793651, 84.10267574, 84.49741497, 84.91537415, 85.33333333, 85.75129252, 86.14603175, 86.54077098, 86.95873016, 87.35346939, 87.77142857, 88.1661678, 88.58412698, 88.97886621, 89.37360544, 89.79156463, 90.18630385, 90.60426304, 90.99900227, 91.3937415, 91.81170068, 92.22965986, 92.64761905, 93.04235828, 93.43709751, 93.85505669, 94.24979592, 94.64453515, 95.06249433, 95.45723356, 95.87519274, 96.26993197, 96.68789116, 97.08263039, 97.50058957, 97.8953288, 98.31328798, 98.70802721, 99.12598639, 99.52072562, 99.91546485, 100.33342404, 100.75138322, 101.14612245, 101.54086168, 101.95882086, 102.35356009, 102.77151927, 103.1662585, 103.56099773, 103.97895692, 104.37369615, 104.79165533, 105.20961451, 105.60435374, 105.99909297, 106.41705215, 106.81179138, 107.22975057, 107.6244898, 108.01922902, 108.43718821, 108.83192744, 109.24988662, 109.64462585, 110.03936508, 110.45732426, 110.87528345, 111.27002268, 111.68798186, 112.10594104, 112.50068027, 112.8954195, 113.31337868, 113.70811791, 114.10285714, 114.52081633, 114.91555556, 115.33351474, 115.72825397, 116.14621315, 116.56417234, 116.95891156, 117.35365079, 117.77160998, 118.16634921, 118.58430839, 118.97904762, 119.3970068, 119.79174603, 120.18648526, 120.60444444, 121.02240363, 121.41714286, 121.81188209, 122.20662132, 122.6245805, 123.04253968, 123.43727891, 123.83201814, 124.24997732, 124.66793651, 125.08589569, 125.48063492, 125.87537415, 126.29333333, 126.68807256, 127.08281179, 127.50077098, 127.8955102, 128.31346939, 128.70820862, 129.1261678, 129.52090703, 129.91564626, 130.33360544, 130.72834467, 131.14630385, 131.54104308, 131.95900227, 132.3537415, 132.77170068, 133.16643991, 133.58439909, 133.97913832, 134.37387755, 134.76861678, 135.18657596, 135.60453515, 135.99927438, 136.39401361, 136.78875283, 137.20671202, 137.6246712, 138.04263039, 138.43736961, 138.8553288, 139.25006803, 139.66802721, 140.06276644, 140.45750567, 140.87546485, 141.29342404, 141.68816327, 142.08290249, 142.47764172, 142.87238095, 143.29034014, 143.70829932, 144.10303855, 144.52099773, 144.91573696, 145.33369615, 145.75165533, 146.14639456, 146.54113379, 146.95909297, 147.3538322, 147.77179138, 148.16653061, 148.56126984, 148.97922902, 149.37396825, 149.76870748, 150.18666667, 150.60462585, 150.99936508, 151.41732426, 151.83528345, 152.23002268, 152.64798186, 153.04272109, 153.43746032, 153.8554195, 154.25015873, 154.66811791, 155.06285714, 155.45759637, 155.87555556, 156.29351474, 156.71147392, 157.0829932, 157.47773243, 157.89569161, 158.29043084, 158.70839002, 159.10312925, 159.52108844, 159.93904762, 160.33378685, 160.72852608, 161.14648526, 161.54122449, 161.95918367, 162.3539229, 162.74866213, 163.16662132, 163.5845805, 163.97931973, 164.39727891, 164.79201814, 165.18675737, 165.5814966, 165.99945578, 166.41741497, 166.8121542, 167.20689342, 167.60163265, 168.01959184, 168.43755102, 168.8555102, 169.25024943, 169.64498866, 170.06294785, 170.45768707, 170.87564626, 171.27038549, 171.68834467, 172.0830839, 172.50104308, 172.89578231, 173.3137415, 173.70848073, 174.12643991, 174.52117914, 174.91591837, 175.33387755, 175.72861678, 176.14657596, 176.54131519, 176.95927438, 177.35401361, 177.77197279, 178.16671202, 178.5846712, 178.97941043, 179.39736961, 179.79210884, 180.18684807, 180.60480726, 180.99954649, 181.41750567, 181.8122449, 182.23020408, 182.64816327, 183.04290249, 183.43764172, 183.83238095, 184.25034014, 184.64507937, 185.06303855, 185.45777778, 185.85251701, 186.27047619, 186.68843537, 187.0831746, 187.50113379, 187.89587302, 188.3138322, 188.70857143, 189.12653061, 189.52126984, 189.93922902, 190.33396825, 190.72870748, 191.14666667, 191.5414059, 191.95936508, 192.37732426, 192.77206349, 193.16680272, 193.5847619, 193.97950113, 194.39746032, 194.79219955, 195.18693878, 195.60489796, 195.99963719, 196.41759637, 196.8123356, 197.23029478, 197.62503401, 198.0429932, 198.48417234, 198.90213152, 199.3200907, 199.71482993, 200.10956916, 200.52752834, 200.92226757, 201.3170068, 201.73496599, 202.15292517, 202.5476644, 202.96562358, 203.36036281, 203.75510204, 204.17306122, 204.56780045, 204.98575964, 205.38049887, 205.7752381, 206.19319728, 206.58793651, 206.98267574, 207.40063492, 207.79537415, 208.21333333, 208.63129252, 10000000.0 };
    private double[] Strengths = { 0.2654636, 0.06607405, 0.08903725, 0.1534354, 0.08795529, 0.16550031, 0.05096057, 0.05582121, 0.08942132, 0.0881904, 0.08665141, 0.05941121, 0.11717465, 0.07267255, 0.07515315, 0.05791297, 0.07126392, 0.04931151, 0.05953147, 0.07123674, 0.05727731, 0.05328223, 0.05048568, 0.0470055, 0.06039992, 0.08187794, 0.04344477, 0.04538196, 0.05949088, 0.06594072, 0.04176192, 0.06334555, 0.05949228, 0.06397539, 0.06839241, 0.08560447, 0.06626275, 0.05129973, 0.06289226, 0.05335624, 0.05549907, 0.04555959, 0.09362043, 0.0560575, 0.04396909, 0.0662443, 0.04782399, 0.0590419, 0.05665702, 0.08171413, 0.05290341, 0.07290347, 0.05699728, 0.04761701, 0.05401835, 0.05644055, 0.06309301, 0.04786662, 0.04847835, 0.05466834, 0.061444, 0.09195796, 0.04087462, 0.04448268, 0.04066836, 0.04832175, 0.04683653, 0.04546132, 0.0764979, 0.0719322, 0.0638311, 0.04307064, 0.04789381, 0.06727248, 0.08153748, 0.04863368, 0.06587285, 0.05994401, 0.05689623, 0.06039473, 0.08729758, 0.04352206, 0.05057186, 0.05951053, 0.06366987, 0.05744513, 0.06422664, 0.10420604, 0.06882756, 0.06570258, 0.068514, 0.04684459, 0.07047207, 0.04624838, 0.05559521, 0.06397739, 0.06105042, 0.04108087, 0.08686706, 0.05429234, 0.07929283, 0.07757509, 0.04681493, 0.04603822, 0.05402516, 0.05723173, 0.06979546, 0.06678481, 0.05771637, 0.04275392, 0.07098763, 0.06136181, 0.07417339, 0.05183437, 0.06506905, 0.08703305, 0.04959944, 0.07417903, 0.05580388, 0.05731228, 0.04424058, 0.04034825, 0.05476565, 0.0570916, 0.04749072, 0.04087114, 0.07611059, 0.05828133, 0.06899773, 0.06413851, 0.07600602, 0.04641599, 0.069775, 0.06099826, 0.07978454, 0.07024142, 0.07276624, 0.04663352, 0.04941625, 0.06917539, 0.06217837, 0.04599709, 0.04633669, 0.04812208, 0.07229237, 0.0676782, 0.04940084, 0.05223464, 0.05485519, 0.07631366, 0.06260965, 0.05079538, 0.04761728, 0.081284, 0.07772563, 0.07049093, 0.05140363, 0.0637003, 0.07282453, 0.05822273, 0.05928297, 0.04608309, 0.04035198, 0.04511091, 0.04558585, 0.05289615, 0.06918105, 0.05761193, 0.04458503, 0.06089215, 0.05842682, 0.06482773, 0.0409252, 0.05525452, 0.04813446, 0.0476001, 0.05149312, 0.06433471, 0.05744958, 0.06286751, 0.10346063, 0.06541827, 0.06241142, 0.05142574, 0.0486667, 0.0537054, 0.04035109, 0.06415172, 0.05543798, 0.07796754, 0.05317526, 0.07392979, 0.07863324, 0.06780247, 0.04491352, 0.05471684, 0.06080923, 0.04039877, 0.04549164, 0.05939949, 0.04668691, 0.05318335, 0.05241721, 0.06331887, 0.0510925, 0.09104524, 0.0755948, 0.06552491, 0.0631283, 0.05346799, 0.04848185, 0.04495183, 0.07309302, 0.06069884, 0.0431045, 0.05087591, 0.06485583, 0.04526698, 0.05626406, 0.05600253, 0.06107168, 0.05914136, 0.04181086, 0.05810492, 0.04348363, 0.05111016, 0.04901428, 0.04476117, 0.06871784, 0.06896861, 0.05774644, 0.07719061, 0.06580108, 0.04446958, 0.04476734, 0.08714031, 0.06161494, 0.06081716, 0.04394362, 0.06426308, 0.0752828, 0.06900834, 0.05878395, 0.05300044, 0.05751802, 0.0601631, 0.05068829, 0.0756577, 0.05177477, 0.04159686, 0.07817713, 0.05721112, 0.07102408, 0.04519052, 0.04027214, 0.04870974, 0.06077125, 0.05043208, 0.04561235, 0.05128868, 0.0459743, 0.06663564, 0.04375663, 0.0642826, 0.05062761, 0.05307758, 0.07113976, 0.04924882, 0.05824135, 0.05739745, 0.0552416, 0.11480255, 0.04416547, 0.05682009, 0.06237885, 0.04855584, 0.04671164, 0.04858716, 0.05056413, 0.04498329, 0.06410225, 0.05540365, 0.05795754, 0.04561866, 0.06960728, 0.04672831, 0.04167391, 0.04933274, 0.05227673, 0.04225622, 0.05950132, 0.05788481, 0.06644473, 0.0456319, 0.05105404, 0.06149903, 0.05507955, 0.0533343, 0.07769807, 0.04443157, 0.04277159, 0.04685548, 0.05919489, 0.05400358, 0.05186255, 0.06954738, 0.04323282, 0.05789858, 0.04410294, 0.04650614, 0.05163536, 0.04036349, 0.04256107, 0.04998305, 0.05505135, 0.05528564, 0.04348199, 0.04757144 };
    private int[] Pitchs = { 4, 6, 7, 7, 9, 9, 7, 7, 6, 6, 6, 6, 7, 6, 6, 6, 6, 7, 6, 6, 6, 7, 6, 7, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 7, 7, 6, 6, 6, 9, 6, 7, 6, 6, 6, 6, 7, 7, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 7, 7, 6, 6, 6, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 7, 7, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 7, 7, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 7, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 7, 7, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 9, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 9, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6 };
    private float timer = 0.0f;
    private int curBeat = 0;
    private MusicPlayer music;
    public int score = 0;
    public int combo = 0;
    private bool stop = true;
    void Start()
    {
        score = 0;
        combo = 0;
        coroutine = WaitAndPrint();
        music = (GetComponent("MusicPlayer") as MusicPlayer);//获取播放器对象
        provider = FindObjectOfType<LeapProvider>()as LeapProvider;
    }

    void Update()
    {
        GameObject.Find("Text").GetComponent<UnityEngine.UI.Text>().text = "Score: " + score + " Combo: " + combo;
        Frame fram = provider.CurrentFrame;
        bool zz = false;
        if (fram.Hands.Count > 0)
        {
            foreach (Hand hand in fram.Hands)
            {
                if ((hand.GrabAngle> 2.7f&&!stop)|| (hand.GrabAngle < 1.3f && stop))
                {
                    zz = true;
                }
            }
        }
        if (zz&&!stop)
        {
            stop = true;
            if (isStart)
            {
                StopCoroutine(coroutine);//否则销毁
                isStart = false;
                coroutine = WaitAndPrint();//当然，销毁之后要留种，为下次再打开作准备 
                //music.Stop("welcome_oblivion");
            }
        }
        else if(zz && stop)
        {
            stop = false;
            if (!isStart)//没开始
            {
                StartCoroutine(coroutine);//则打开这个生成器呗
                isStart = true;
                curBeat = 0;
                timer = 0.0f;
                music.Play("welcome_oblivion");//调用播放器Play方法
            }
        }
    }

    private IEnumerator WaitAndPrint()
    {
        int cur = 0, lcur;
        double timer = 0.0;
        while (true)
        {
            if (!stop)
            {
                if (timer + 2.0 >= Beats[cur])
                {
                    lcur = cur;
                    while (timer + 2.0 >= Beats[cur]) cur++;
                    for (int jj = 0; jj < rnd.Next(3); jj++)
                    {
                        double theta = rnd.NextDouble() * 3.14;
                        float radius = (float)rnd.NextDouble() * 2.33f;
                        float x = (float)System.Math.Cos(Strengths[lcur]/0.07) * radius * 2.0f;
                        float y = (float)System.Math.Sin(theta) * radius;
                        GameObject obj = GameObject.Instantiate(Pitchs[lcur]<=6 ? CreateBallModel : CreateCube,
                                                                new Vector3(x, y, 10f),
                                                                gameObject.transform.rotation);
                        Rigidbody rb = obj.GetComponent<Rigidbody>();
                        rb.useGravity = false;
                        float ix = ((float)rnd.NextDouble() - 0.5f) * 0.1f;
                        rb.velocity = new Vector3(ix - x, 0.0f - y, -10f) * 0.5f;
                    }
                }
                timer += 0.2;
                yield return new WaitForSeconds(0.2f);
            }
        }
    }
}